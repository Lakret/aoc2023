<!-- livebook:{"persist_outputs":true} -->

# Day 4

## Section

```elixir
input =
  Path.join(__DIR__, "inputs/d04")
  |> File.read!()
```

<!-- livebook:{"output":true} -->

```
"Card   1: 33 56 23 64 92 86 94  7 59 13 | 86 92 64 43 10 70 16 55 79 33 56  8  7 25 82 14 31 96 94 13 99 29 69 75 23\nCard   2: 61 66 75  1 27 38 93 90 34 43 | 94 46 62 49 35 88 45 70 15 22 20 86 56 38 64 98 50  6 79 11 13 93 92 60 16\nCard   3: 57  7 33 56 85  6 88 34 80  8 | 92 42  7 60 61 51 40  6 67 35  3 25 87  2 98 75 97 54 10 68 73 83  4 62 56\nCard   4: 79 85 94 74 15 62 84 88 76 56 | 56  9 22 57  4 92 62 79 84 64 72 55 34 88 66 15 45 18 76 73 85 94  8 78 74\nCard   5: 57 94 99 25 52 67 69 31 26 78 | 94 52 31 83 70 45 40 67 89 11 81 24 25 61 26 72 50 12 27 69 91 57 55 34 78\nCard   6:  5 96  3 19 98 25 13 59 94  8 | 36 55 22 76 86 19 10  8 59  9 87 40  2 71 13 98 12 77  3 70  5 25 34 41 88\nCard   7: 35 52 84 36 72 53 76 88 41 14 | 57 34 14 39 44 71 51  1 67 30 16 77 23 66 45 74 37 55 38 69 33 31 98 72 36\nCard   8:  7 70 72 13 23  1 48 18 40 94 | 48 70 93 99 20 23 17 40 72 35 21  7 71  3 42 59 87 55 18 41 94  1 13 22 90\nCard   9: 40  2 46 38 86 16 62 78 29 13 | 26 46 47 29 99 51 25 57 66 86 62  2 22 70 41  3 78 13 74 15 16 90 43 40 38\nCard  10: 35 71 99 87 81 58  5 83 55 73 | 90 34 71 10 96 38 39 29 69 93 35 51 86 12 76 91 80 36 17 59 64 68 58 15 82\nCard  11: 35 89 27 73 65 46 39 86 81 90 | 86 90 50 35 73 31 92 65 18 81 30 37 21 76 89 56 64 71 49 12 27 82 16 32 29\nCard  12: 15 77 35 41 38 93 63 30 39 18 | 90 69 65 93 13  4 64 51 72 57 96 91 75 14 58 94 28 38 63 97 86 84 50 15 21\nCard  13: 10 82 16 85 74 38 95 51 54 94 | 66 29 85 73 54  8 51 14 56 74 46 42 10 67 16 59 23  7 95 48 94  6 82 68 88\nCard  14: 77 53 62 72 97  7 36 96 67 28 | 30 24 28 44 39 77 15 88 92  4 60 66 11 21 20 42 55 53  6 12 95 87 37 58 85\nCard  15: 89 74 36  8 27 73 90 60 48 56 | 56 45 74 78 39  7 15  6 89 88  8 76 90 16 22 36 17 10 99 79 71 59 46 96 49\nCard  16: 82 64 99 10 32 65 20 78 29 31 | 49 59  4 78 22 18 95 82 54 72 39 41 35 14 98  1 84 92 58 64 28 83 50  7 65\nCard  17: 25  1 40 66 84 24 19 17 10 46 | 22 40  8 87 17 38  6 95 36 51 15 93 18 73 56  9 13 57 63 10 78 37 48  1 84\nCard  18: 18 14 27 40 80 47  9 65 22  5 | 90 59 72 36 33 31 93 55 75  3 56 37 27 87 10 23 47 19 99 85 35 48 18 62 69\nCard  19: 63 16 71 14  1 89 61 55 62 44 | 32  5 64 82 94 77 11 90 54 47 49 29 97 78 57 68 92 33 44 28 59 30 72 18  8\nCard  20: 60 21 85  8 35 66 70 36  2 58 | 10 37 36 64 72 98 60 19 55 45 30 33 31 94 90 49 71 57 81 17 91 29 68 86 39\nCard  21:  4 25 18  6 56 62 97  1 83 30 | 42 66 83 75 14 50 26 24 90 36 46 87 49 84 53 65 80 17 92 70 19 95  9 27 32\nCard  22: 53 91 82 19 43 83 65 46  4 85 | 97 67 90 39 16  1 54 64 10 77 99 71 28 94 30 45 84 95 21 35 13 61 29 11 33\nCard  23: 65 66 83 69 23 16 13  3 29 68 |  6 54 27 65 16 68 13 69 29 14 91 23 37 61 39 74 66 77 83 11 26 40 92  3 49\nCard  24: 43 97 61 35 69 20 65  3 23 79 |  3 69 20 80 98 92 18 61 91 96 86 88 19 25 43 97 17 79 47 55 11 35 23 77 65\nCard  25: 94 30 47 27  2 80 76 75 82 67 | 28 12 96 27  2 20  4 29 58 18 93 75 62 38 30 72 94 80 76 91 47 14 67 82 46\nCard  26: 51 47 45 64  9 53 16 80 61 94 | 88 28 84 45 61 51 70 18  4 21 94 62  5 53 32 10 20 86 47 46 43  9 66 83 80\nCard  27: 31  5 15 38 10 61 33 92 26 47 | 60 49 54 69  1 99 85 29 95 34 84 81 36 11 57 67 14 55 90 51 17  7 37 35 48\nCard  28: 25 69 85 59 82 16  6 17 49 62 | 80 17 62 69 16 46 87 29 59 64 97 85 45 30  6 82 47 75 25 43 72 14  2 23 49\nCard  29: 58 97 36 33 62 27 74 38 68 23 | 51 20 85 47 44 67 48 25 39 36 17 61 52 22 79  6 64 57 95 56 71 33 98 34 42\nCard  30: 74 96 56 34 64 54 26 22 62 59 | 32 74 61  7 34 47 83 94 27 26 66 54 87 75 56 65 49 13 64 70 96 62 53 22 59\nCard  31: 26  6 14 82 12 60 16  4 92 87 | 16 33 76 55 54 39 27 26 17 83  6 18 94 77  3 40 81 92  1 69 25 19 71 99  2\nCard  32: 15  3 33 16 13 65  8 44 40 96 | 22 15 46 89 16 50  6 33 53 24 96 40  8 35 97 13  3 55 43 14 65 66 34 60 44\nCard  33: 41 61 28 60 85 69 87 62 91 18 | 49 88 84 73 20 45 75 99 27 25  3 65 66 30 50 54 97 57 76 96  2  6 39  5 18\nCard  34: 12 72 20 48 49 77 38 86 68 92 |  6 56 30 68 95 87 42 16 59 10  7 22 82 74  2 71 19 48 50  1 40 37 24 80 72\nCard  35: 97 86 21 45 10 30 63  8 36 91 | 33 31 67 77 29 24 10 79 21 25 12 71 30  1 68 56 46 94 51 64  8 14 45  4 41\nC" <> ...
```

```elixir
test_input = """
Card 1: 41 48 83 86 17 | 83 86  6 31 17  9 48 53
Card 2: 13 32 20 16 61 | 61 30 68 82 17 32 24 19
Card 3:  1 21 53 59 44 | 69 82 63 72 16 21 14  1
Card 4: 41 92 73 84 69 | 59 84 76 51 58  5 54 83
Card 5: 87 83 26 28 32 | 88 30 70 12 93 22 82 36
Card 6: 31 18 13 56 72 | 74 77 10 23 35 67 36 11
"""
```

<!-- livebook:{"output":true} -->

```
"Card 1: 41 48 83 86 17 | 83 86  6 31 17  9 48 53\nCard 2: 13 32 20 16 61 | 61 30 68 82 17 32 24 19\nCard 3:  1 21 53 59 44 | 69 82 63 72 16 21 14  1\nCard 4: 41 92 73 84 69 | 59 84 76 51 58  5 54 83\nCard 5: 87 83 26 28 32 | 88 30 70 12 93 22 82 36\nCard 6: 31 18 13 56 72 | 74 77 10 23 35 67 36 11\n"
```

```elixir
defmodule D04 do
  def parse_input(input) do
    cards = String.split(input, "\n", trim: true)

    Enum.map(cards, fn card ->
      [id, numbers] = String.split(card, ": ")
      id = String.replace_prefix(id, "Card ", "") |> String.trim() |> String.to_integer()

      numbers = numbers |> String.split(" | ")

      [winning_numbers, numbers_you_have] =
        Enum.map(numbers, fn numbers ->
          String.split(numbers)
          |> Enum.map(&String.trim/1)
          |> Enum.map(&String.to_integer/1)
        end)

      %{id: id, winning_numbers: winning_numbers, numbers_you_have: numbers_you_have}
    end)
  end

  def count_wins(input) do
    Enum.map(input, fn card ->
      MapSet.new(card.numbers_you_have)
      |> MapSet.intersection(MapSet.new(card.winning_numbers))
      |> MapSet.size()
    end)
  end

  def p1(input) do
    count_wins(input)
    |> Enum.map(fn wins ->
      if wins == 0, do: 0, else: 2 ** (wins - 1)
    end)
    |> Enum.sum()
  end
end
```

<!-- livebook:{"output":true} -->

```
{:module, D04, <<70, 79, 82, 49, 0, 0, 14, ...>>, {:p1, 1}}
```

```elixir
input = D04.parse_input(input)
test_input = D04.parse_input(test_input)
```

<!-- livebook:{"output":true} -->

```
[
  %{id: 1, winning_numbers: [41, 48, 83, 86, 17], numbers_you_have: [83, 86, 6, 31, 17, 9, 48, 53]},
  %{
    id: 2,
    winning_numbers: [13, 32, 20, 16, 61],
    numbers_you_have: [61, 30, 68, 82, 17, 32, 24, 19]
  },
  %{id: 3, winning_numbers: [1, 21, 53, 59, 44], numbers_you_have: [69, 82, 63, 72, 16, 21, 14, 1]},
  %{id: 4, winning_numbers: ~c")\\ITE", numbers_you_have: [59, 84, 76, 51, 58, 5, 54, 83]},
  %{
    id: 5,
    winning_numbers: [87, 83, 26, 28, 32],
    numbers_you_have: [88, 30, 70, 12, 93, 22, 82, 36]
  },
  %{
    id: 6,
    winning_numbers: [31, 18, 13, 56, 72],
    numbers_you_have: [74, 77, 10, 23, 35, 67, 36, 11]
  }
]
```

```elixir
# 23441
D04.p1(input)
```

<!-- livebook:{"output":true} -->

```
23441
```

```elixir
card_id_to_copies_count =
  D04.count_wins(input)
  |> Enum.with_index(fn el, idx -> {idx + 1, el} end)
```

<!-- livebook:{"output":true} -->

```
[
  {1, 9},
  {2, 2},
  {3, 3},
  {4, 10},
  {5, 9},
  {6, 8},
  {7, 3},
  {8, 10},
  {9, 10},
  {10, 3},
  {11, 8},
  {12, 4},
  {13, 9},
  {14, 3},
  {15, 6},
  {16, 4},
  {17, 5},
  {18, 3},
  {19, 1},
  {20, 2},
  {21, 1},
  {22, 0},
  {23, 10},
  {24, 10},
  {25, 10},
  {26, 8},
  {27, 0},
  {28, 10},
  {29, 2},
  {30, 10},
  {31, 4},
  {32, 10},
  {33, 1},
  {34, 3},
  {35, 5},
  {36, 5},
  {37, 4},
  {38, 2},
  {39, 0},
  {40, 0},
  {41, 4},
  {42, 3},
  {43, 1},
  {44, 1},
  {45, 0},
  {46, 5},
  {47, 2},
  {48, 10},
  {49, ...},
  {...},
  ...
]
```

```elixir
winning_card_wins_copies_of =
  Enum.map(card_id_to_copies_count, fn {id, copies} ->
    if copies > 0 do
      {id, 1..copies |> Enum.map(fn x -> x + id end)}
    else
      {id, []}
    end
  end)
```

<!-- livebook:{"output":true} -->

```
[
  {1, [2, 3, 4, 5, 6, 7, 8, 9, 10]},
  {2, [3, 4]},
  {3, [4, 5, 6]},
  {4, [5, 6, 7, 8, 9, 10, 11, 12, 13, 14]},
  {5, [6, 7, 8, 9, 10, 11, 12, 13, 14]},
  {6, [7, 8, 9, 10, 11, 12, 13, 14]},
  {7, ~c"\b\t\n"},
  {8, [9, 10, 11, 12, 13, 14, 15, 16, 17, 18]},
  {9, [10, 11, 12, 13, 14, 15, 16, 17, 18, 19]},
  {10, ~c"\v\f\r"},
  {11, [12, 13, 14, 15, 16, 17, 18, 19]},
  {12, [13, 14, 15, 16]},
  {13, [14, 15, 16, 17, 18, 19, 20, 21, 22]},
  {14, [15, 16, 17]},
  {15, [16, 17, 18, 19, 20, 21]},
  {16, [17, 18, 19, 20]},
  {17, [18, 19, 20, 21, 22]},
  {18, [19, 20, 21]},
  {19, [20]},
  {20, [21, 22]},
  {21, [22]},
  {22, []},
  {23, [24, 25, 26, 27, 28, 29, 30, 31, 32, 33]},
  {24, [25, 26, 27, 28, 29, 30, 31, 32, 33, 34]},
  {25, [26, 27, 28, 29, 30, 31, 32, 33, 34, 35]},
  {26, [27, 28, 29, 30, 31, 32, 33, 34]},
  {27, []},
  {28, [29, 30, 31, 32, 33, 34, 35, 36, 37, 38]},
  {29, [30, 31]},
  {30, [31, 32, 33, 34, 35, 36, 37, 38, 39, 40]},
  {31, ~c" !\"#"},
  {32, ~c"!\"#$%&'()*"},
  {33, ~c"\""},
  {34, ~c"#$%"},
  {35, ~c"$%&'("},
  {36, ~c"%&'()"},
  {37, ~c"&'()"},
  {38, ~c"'("},
  {39, []},
  {40, []},
  {41, ~c"*+,-"},
  {42, ~c"+,-"},
  {43, ~c","},
  {44, ~c"-"},
  {45, []},
  {46, ~c"/0123"},
  {47, ~c"01"},
  {48, ~c"123456789:"},
  {49, ...},
  {...},
  ...
]
```

```elixir
copies =
  winning_card_wins_copies_of
  |> Enum.reverse()
  |> Enum.reduce(
    %{},
    fn
      {card_id, []}, memo ->
        Map.put(memo, card_id, 0)

      {card_id, wins_card_ids}, memo ->
        copies_to_win =
          Enum.map(wins_card_ids, fn copy_card_id ->
            Map.get(memo, copy_card_id)
          end)
          |> Enum.sum()

        Map.put(memo, card_id, copies_to_win + length(wins_card_ids))
    end
  )
  |> Map.values()
  |> Enum.sum()
```

<!-- livebook:{"output":true} -->

```
5923712
```

```elixir
copies + length(input)
```

<!-- livebook:{"output":true} -->

```
5923918
```
